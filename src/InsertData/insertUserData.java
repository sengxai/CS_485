package InsertData;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import DataBaseConnection.DataBase;

public class insertUserData {

	//Database Stuff
	public static Statement stmt = null;
    public static PreparedStatement pst = null;
    public static Connection conn = null;
	
	
	public static void main(String[] args) {
		
		try{//this will make the connection to the database when the program is being run
            conn = DataBase.java_db();
        }catch(Exception e ){
           // System.out.println(e);
        }
			
		//open files
		File fi = new File("src/InsertData/firstname.txt"); 
		File la = new File("src/InsertData/lastname.txt");
		File em = new File("src/InsertData/email.txt");
		File pa = new File("src/InsertData/password.txt");
		File p3 = new File("src/InsertData/3-pass.txt");
		File p2 = new File("src/InsertData/2-pass.txt");
		File pi = new File("src/InsertData/pic3.txt");
		File an = new File("src/InsertData/Animals.txt");
		File fl = new File("src/InsertData/Flowers.txt");
		File sp = new File("src/InsertData/Sports.txt");
		File ve = new File("src/InsertData/Vehicles.txt");
		
		//get path of file and set to strings
		String first = fi.getAbsolutePath();
		String last = la.getAbsolutePath();
		String email = em.getAbsolutePath();
		String text = pa.getAbsolutePath();
		String image = p2.getAbsolutePath(); //"image-pass";
		String rgb = p3.getAbsolutePath(); //"rgb-pass";
		String pic = pi.getAbsolutePath();
		String animals = an.getAbsolutePath();
		String flowers = fl.getAbsolutePath();
		String sports = sp.getAbsolutePath();
		String vehicles = ve.getAbsolutePath();

		//LEVEL2 table
		DropLevel2Table();
		CreateLevel2Table(9); 					//initialize with amount of photos/category e.g. 9
		
		//create level2 insert scripts and execute
		InsertLevel2Script(animals, "Animals");
		InsertLevel2Script(flowers, "Flowers");
		InsertLevel2Script(sports, "Sports");
		InsertLevel2Script(vehicles, "Vehicles");
		
		//USERS table
		DropUserTable();
		CreateUserTable();
		
		//create user insert script and execute
		InsertUserScript(first, last, email, text, image, rgb, pic);

	}
	
	public static void DropLevel2Table () {
		
		String sql;
		
        try {
        	  //create drop statement
        	  stmt = conn.createStatement();
	          sql = "DROP TABLE LEVEL2";	          
	          
              //execute drop statement
              stmt.execute(sql);
              System.out.println("LEVEL2 table dropped");
		} catch (SQLException e) {
			//e.printStackTrace();
			System.out.println("There is no table LEVEL2 to drop");
		}
		
	}
	
	public static void CreateLevel2Table (int id) {
		
		String sql;
		
        try {
        	  //create "create" statement
        	  stmt = conn.createStatement();
        	  sql = "CREATE TABLE LEVEL2 \r\n" + 
        	  		"(\r\n" + 
        	  		"    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, \r\n" + 
        	  		"    Animals 	BLOB,\r\n" + 
        	  		"    Flowers 	BLOB,\r\n" + 
        	  		"    Sports 		BLOB,\r\n" + 
        	  		"    Vehicles 	BLOB,\r\n" +  
        	  		"    PRIMARY KEY(id) \r\n" + 
        	  		")";
			  
			  //execute create statement
        	  stmt.execute(sql);
        	  System.out.println("LEVEL2 table created");
		} catch (SQLException e) {
			//e.printStackTrace();
			System.out.println("There may already be a table named LEVEL2");
		}
        
        //insert id's into table 
        for (int i = 1; i <= id; i++) {

            try {
            	String insert = "insert into LEVEL2 (id) values (?)";
				pst = conn.prepareStatement(insert);
				pst.setInt(1, i);

                //execute insert statement
                pst.execute();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
        }
  	  	System.out.println(id+" id's created for LEVEL2");
		
	}
	
	public static void InsertLevel2Script (String pic, String category) {

		//readers to read file
		BufferedReader reader5;
		int id = 1;								//starts id for table
		
		//stuff for image byte conversion
		File img; 
		byte[] profilePic;
		FileInputStream fix;
		ByteArrayOutputStream bos;
		byte[] buf;
		
		try {
			
			//read files
			reader5 = new BufferedReader(new FileReader(pic));

			//set first line in each file to a string
			String currentImage = reader5.readLine();
			String path; 
			
			//get image
			img = new File(currentImage);
			path = img.getCanonicalPath();			//path of image
			fix = new FileInputStream(path);
			bos = new ByteArrayOutputStream();
			buf = new byte[1024];

			//convert image to bytes
			for(int number; (number = fix.read(buf))!= -1;) {
			    bos.write(buf,0,number);

			}
			profilePic = bos.toByteArray();			//new image in bytes
			
			//create and execute insert statements
			while (currentImage != null) {
				
				try{
					//create insert statement
                    String sql ="update LEVEL2 set "+category+"= ? where id=?";
                    pst = conn.prepareStatement(sql);
                    pst.setBytes(1, profilePic);
                    pst.setInt(2, id);

                    //execute insert statement
	                pst.execute();
	                
	            }catch(Exception e1){
	                //System.out.print(e1);
	            }
				
				//get next image
				img = new File(reader5.readLine());
				path = img.getCanonicalPath();		//path of image
				fix = new FileInputStream(path);
				bos = new ByteArrayOutputStream();
				buf = new byte[1024];				
				
				//convert image to bytes
				for(int number; (number = fix.read(buf))!= -1;) {
				    bos.write(buf,0,number);

				}
				profilePic = bos.toByteArray();		//new image in bytes
				id++;
			}
			
			//close all open connections
			reader5.close();
			bos.close();
			fix.close();
			//conn.close();
			
			
		}
		catch (IOException e){
			e.printStackTrace();
		} 

		catch (NullPointerException ne) {
			//ne.printStackTrace();
			System.out.println("INSERT LEVEL2 "+category+" DONE!");
		}
	}

	
	
	public static void DropUserTable () {
		
		String sql;
		
        try {
        	  //create drop statement
        	  stmt = conn.createStatement();
	          sql = "DROP TABLE USERS";	          
	          
              //execute drop statement
              stmt.execute(sql);
              System.out.println("USERS table dropped");
		} catch (SQLException e) {
			//e.printStackTrace();
			System.out.println("There is no table USERS to drop");
		}
		
	}
	
	public static void CreateUserTable () {
		
		String sql;
		
        try {
        	  //create "create" statement
        	  stmt = conn.createStatement();
        	  sql = "CREATE TABLE USERS \r\n" + 
					"(\r\n" + 
					"    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY, \r\n" + 
					"    firstName   VARCHAR(255), \r\n" + 
					"    lastName    VARCHAR(255), \r\n" + 
					"    email       VARCHAR(255), \r\n" + 
					"    username    VARCHAR(255) NOT NULL,\r\n" + 
					"    textPass    VARCHAR(255),\r\n" + 
					"    imagePass   VARCHAR(255),\r\n" + 
					"    rgbPass     VARCHAR(255),\r\n" + 
					"    Image 		 BLOB,\r\n" + 
					"    PRIMARY KEY(id) \r\n" + 
					")";
			  
			  //execute create statement
        	  stmt.execute(sql);
        	  System.out.println("USERS table created");
		} catch (SQLException e) {
			//e.printStackTrace();
			System.out.println("There may already be a table named USERS");
		}
		
	}
	
	
	public static void InsertUserScript (String firstname, String lastname, String email, String text, String image, String rgb, String pic) {
		
		//readers to read file
		BufferedReader reader;
		BufferedReader reader2;
		BufferedReader reader3;
		BufferedReader reader4;
		BufferedReader reader5;
		BufferedReader reader6;
		BufferedReader reader7;
		
		//stuff for image byte conversion
		File img; 
		byte[] profilePic;
		FileInputStream fix;
		ByteArrayOutputStream bos;
		byte[] buf;
		
		try {
			
			//read files
			reader = new BufferedReader(new FileReader(firstname));
			reader2 = new BufferedReader(new FileReader(lastname));
			reader3 = new BufferedReader(new FileReader(email));
			reader4 = new BufferedReader(new FileReader(text));
			reader5 = new BufferedReader(new FileReader(pic));
			reader6 = new BufferedReader(new FileReader(rgb));
			reader7 = new BufferedReader(new FileReader(image));

			//set first line in each file to a string
			String firstName = reader.readLine();
			String lastName = reader2.readLine();
			String emailAdd = reader3.readLine();
			String textPass = reader4.readLine();
			String rgbPass = reader6.readLine();
			String imagePass = reader7.readLine();
			String path; 
			
			//get image
			img = new File(reader5.readLine());
			path = img.getCanonicalPath();			//path of image
			fix = new FileInputStream(path);
			bos = new ByteArrayOutputStream();
			buf = new byte[1024];

			//convert image to bytes
			for(int number; (number = fix.read(buf))!= -1;) {
			    bos.write(buf,0,number);

			}
			profilePic = bos.toByteArray();			//new image in bytes
			
			//create and execute insert statements
			while (firstName != null && lastName != null && emailAdd != null && textPass != null && imagePass != null && rgbPass != null) {
				
				try{
					//create insert statement
                    String sql ="insert into users (firstName, lastName, email, username, textPass, imagePass, rgbPass, Image) values (?,?,?,?,?,?,?,?)";
                    pst = conn.prepareStatement(sql);
                    pst.setString(1,firstName);
                    pst.setString(2,lastName);
                    pst.setString(3,emailAdd);
                    pst.setString(4,lastName+firstName);
                    pst.setString(5,textPass);
                    pst.setString(6,imagePass);
                    pst.setString(7,rgbPass);
                    pst.setBytes(8, profilePic);

                    //execute insert statement
	                pst.execute();
	                
	            }catch(Exception e1){
	                //System.out.print(e1);
	            }
								
				//set next line in each file to a string
				firstName = reader.readLine();
				lastName = reader2.readLine();
				emailAdd = reader3.readLine();
				textPass = reader4.readLine();
				rgbPass = reader6.readLine();
				imagePass = reader7.readLine();
				
				//get next image
				img = new File(reader5.readLine());
				path = img.getCanonicalPath();		//path of image
				fix = new FileInputStream(path);
				bos = new ByteArrayOutputStream();
				buf = new byte[1024];				
				
				//convert image to bytes
				for(int number; (number = fix.read(buf))!= -1;) {
				    bos.write(buf,0,number);

				}
				profilePic = bos.toByteArray();		//new image in bytes
			}
			
			//close all open connections
			reader.close();
			reader2.close();
			reader3.close();
			reader4.close();
			reader5.close();
			reader6.close();
			reader7.close();
			bos.close();
			fix.close();
			conn.close();
			
			
		}
		catch (IOException e){
			e.printStackTrace();
		} 
		catch (SQLException e) {
			e.printStackTrace();
		}
		catch (NullPointerException ne) {
			//ne.printStackTrace();
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			System.out.println("INSERT USERS Data DONE!");
		}
	}

}

